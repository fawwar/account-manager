# Specify the docker image to use (only used if using docker runners)
# See: http://doc.gitlab.com/ee/ci/docker/using_docker_images.html
variables:
  GIT_DEPTH: "1"
  GIT_SSL_NO_VERIFY: "1"
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - cleanup

linux-test-build:
  tags:
    - ubuntu-18
  image: dev18-ci
  stage: build
  except:
    - tags
  before_script:
    - python3 ./tools/py/get-pip.py
    - python3 ./tools/py/installPack.py
  script:
          #- python3 ./scripts/build.py $PROJECT
          #- python3 ./scripts/packaging.py $PROJECT
    - python3 ./scripts/PackagingTool.py
      #- cd $SERVICE/
      #- python3 ./scripts/build.py
      #- python3 ./scripts/packaging.py
     

linux-release-build:
  tags:
    - ubuntu-18
  image: dev18-ci
  stage: build
  only:
    - tags
  except:
    - branches
  before_script:
    - python3 ./tools/py/get-pip.py
    - python3 ./tools/py/installPack.py    
  script:
    - python3 ./scripts/build.py $PROJECT
    - python3 ./scripts/packaging.py $PROJECT
  artifacts:
    paths:      
      - account-manager.tar.gz
      - account-manager/  
    expire_in: 1 week    

windows-test-build:
  tags:
    - windows
  stage: build
  except:
    - tags
  before_script:
    - chcp 65001
  script:
    - CALL "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64
      #- tools\py\python.exe .\scripts\build.py %PROJECT%
      #- tools\py\python.exe .\scripts\packaging.py %PROJECT%
    - netsh winhttp show proxy
    - ssh-keyscan git.gorilla-technology.com
      #- git config --global core.sshCommand 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'  
    - ssh -o StrictHostKeyChecking=no
    - ssh-keyscan -t rsa git.gorilla-technology.com >> %userprofile%/.ssh/known_hosts
    - git clone -b pybuild_release git@git.gorilla-technology.com:vird01/comm-server.git
      #- tools\py\python.exe .\scripts\PackagingTool.py
      
  
windows-release-build:
  tags:
    - windows
  stage: build
  only:
    - tags
  except:
    - branches
  before_script:
    - chcp 65001
  script:
    - CALL "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64
    - tools\py\python.exe .\scripts\build.py %PROJECT%
    - tools\py\python.exe .\scripts\packaging.py %PROJECT%
  artifacts:      
    paths:
      - account-manager.zip
    expire_in: 1 week    

windows-cleanup:
  tags:
    - windows
  stage: cleanup
  script:
    - echo "Time to clean up"
  after_script:
    - set "BUILD_DIR=%CI_PROJECT_DIR%"
    - set "BUILD_DIR=%BUILD_DIR:/=\%"
    - echo "Cleaning %BUILD_DIR%"
    - rmdir /S /Q %BUILD_DIR%
    - exit /b 0
         
  
