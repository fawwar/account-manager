#include <fstream>
#include <iostream>
#include <string>
#include <json/json.h>
#include "Config.h"

Config::Config()
{
#ifdef TELSTRA
  permission = "ewoKICAgICAgIml2YXIiOiB7CiAgICAgICAgImNoYW5uZWxzIjogewogICAgICAgICAgImNoYW5uZWwiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiY2hhbm5lbCI6IDAsCiAgICAgICAgICAgICAgImFzc2lnbiIgOiAiU2V0dGluZyIsCiAgICAgICAgICAgICAgImNhbWVyYSIgOiAiUmVhZCIsCiAgICAgICAgICAgICAgImNvbmRpdGlvbiIgOiAiUmVhZCIsCiAgICAgICAgICAgICAgImluZm9TZXR0aW5nIiA6ICJTZXR0aW5nIiwKICAgICAgICAgICAgICAiaXZhRXZlbnQiIDogIlJlYWQiLAogICAgICAgICAgICAgICJyZWNvcmRTZXR0aW5nIiA6ICJEZW55IiwKICAgICAgICAgICAgICAic3lzdGVtRXZlbnQiIDogIlJlYWQiLAogICAgICAgICAgICAgICJ2aWRlbyIgOiAiTGl2ZStQbGF5YmFjaytBcmNoaXZlIiwKICAgICAgICAgICAgICAidmlzaWJsZSIgOiB0cnVlCiAgICAgICAgICAgIH0gICAgICAgICAgCiAgICAgICAgICBdLAogICAgICAgICAgInRlbXBsYXRlIjogewogICAgICAgICAgICAiYXNzaWduIiA6ICJTZXR0aW5nIiwKICAgICAgICAgICAgImNhbWVyYSIgOiAiUmVhZCIsCiAgICAgICAgICAgICJjb25kaXRpb24iIDogIlJlYWQiLAogICAgICAgICAgICAiaW5mb1NldHRpbmciIDogIlJlYWQiLAogICAgICAgICAgICAiaXZhRXZlbnQiIDogIlJlYWQiLAogICAgICAgICAgICAicmVjb3JkU2V0dGluZyIgOiAiRGVueSIsCiAgICAgICAgICAgICJzeXN0ZW1FdmVudCIgOiAiUmVhZCIsCiAgICAgICAgICAgICJ2aWRlbyIgOiAiTGl2ZStQbGF5YmFjaytBcmNoaXZlIiwKICAgICAgICAgICAgInZpc2libGUiIDogdHJ1ZQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgImV2ZW50cyIgOiB7CiAgICAgICAgICAgICJlbmFibGUiIDogInRydWUiLAogICAgICAgICAgICAiZXZlbnRNYW5hZ2VyU2V0dGluZyIgOiAiU2V0dGluZyIsCiAgICAgICAgICAgICJzdWJzY3JpcHRpb24iIDogIlJlYWQiCiAgICAgICAgIH0sCiAgICAgICAgICJpdmEiIDogewogICAgICAgICAgICAiYW5hbHlzaXMiIDogIlJlYWQiCiAgICAgICAgIH0sCiAgICAgICAgICJzeXN0ZW0iIDogewogICAgICAgICAgICAiYWNjb3VudCIgOiAiQWNjb3VudCIsCiAgICAgICAgICAgICJiZXRhIiA6ICJEZW55IiwKICAgICAgICAgICAgImluZm8iIDogIlNldHRpbmciLAogICAgICAgICAgICAibG1zIiA6ICJTZXR0aW5nIiwKICAgICAgICAgICAgIm1tcyIgOiAiRGVueSIsCiAgICAgICAgICAgICJyZWJvb3QiIDogIkFsbG93IiwKICAgICAgICAgICAgInNtYXJ0UmV0YWlsU2VydmljZSIgOiAiU2V0dGluZyIsCiAgICAgICAgICAgICJzdG9yYWdlIiA6ICJEZW55IiwKICAgICAgICAgICAgInRpbWUiIDogIlNldHRpbmciLAogICAgICAgICAgICAidXBncmFkZSIgOiAiQWxsb3ciCiAgICAgICAgIH0sCiAgICAgICAgICJ0dldhbGxzIiA6IHsKICAgICAgICAgICAgImVuYWJsZSIgOiAiZmFsc2UiCiAgICAgICAgIH0KICAgICAgfSwKICAgICAgInZtcyIgOiB7fQogICAgCiAgfQ==";
#else
  permission = "ewogICAgIml2YXIiOiB7CiAgICAgICJjaGFubmVscyI6IHsKICAgICAgICAiY2hhbm5lbCI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImNoYW5uZWwiOiAwLAogICAgICAgICAgICAidmlzaWJsZSI6IHRydWUsCiAgICAgICAgICAgICJhc3NpZ24iOiAiU2V0dGluZyIsCiAgICAgICAgICAgICJ2aWRlbyI6ICJMaXZlK1BsYXliYWNrK0FyY2hpdmUiLAogICAgICAgICAgICAiY29uZGl0aW9uIjogIlNldHRpbmciLAogICAgICAgICAgICAiY2FtZXJhIjogIlNldHRpbmciLAogICAgICAgICAgICAiaW5mb1NldHRpbmciOiAiU2V0dGluZyIsCiAgICAgICAgICAgICJyZWNvcmRTZXR0aW5nIjogIlNldHRpbmciLAogICAgICAgICAgICAiaXZhRXZlbnQiOiAiUmVhZCIsCiAgICAgICAgICAgICJzeXN0ZW1FdmVudCI6ICJSZWFkIgogICAgICAgICAgfSAgICAgICAgICAKICAgICAgICBdLAogICAgICAgICJ0ZW1wbGF0ZSI6IHsKICAgICAgICAgICAgInZpc2libGUiOiB0cnVlLAogICAgICAgICAgICAiYXNzaWduIjogIlNldHRpbmciLAogICAgICAgICAgICAidmlkZW8iOiAiTGl2ZStQbGF5YmFjaytBcmNoaXZlIiwKICAgICAgICAgICAgImNvbmRpdGlvbiI6ICJTZXR0aW5nIiwKICAgICAgICAgICAgImNhbWVyYSI6ICJTZXR0aW5nIiwKICAgICAgICAgICAgImluZm9TZXR0aW5nIjogIlNldHRpbmciLAogICAgICAgICAgICAicmVjb3JkU2V0dGluZyI6ICJTZXR0aW5nIiwKICAgICAgICAgICAgIml2YUV2ZW50IjogIlJlYWQiLAogICAgICAgICAgICAic3lzdGVtRXZlbnQiOiAiUmVhZCIKICAgICAgICB9CiAgICAgIH0sCiAgICAgIAogICAgICAidHZXYWxscyI6IHsKICAgICAgICAiZW5hYmxlIjogdHJ1ZQogICAgICB9LAogICAgICAiZXZlbnRzIjogewogICAgICAgICJlbmFibGUiOiB0cnVlLAogICAgICAgICJzdWJzY3JpcHRpb24iOiAiU2V0dGluZyIsCiAgICAgICAgImV2ZW50TWFuYWdlclNldHRpbmciOiAiU2V0dGluZyIKICAgICAgfSwKICAgICAgIml2YSIgOiB7CiAgICAgICAgImFuYWx5c2lzIiA6ICJTZXR0aW5nIgogICAgIH0sCiAgICAgICJzeXN0ZW0iOiB7CiAgICAgICAgImluZm8iOiAiU2V0dGluZyIsCiAgICAgICAgIm1tcyI6ICJTZXR0aW5nIiwKICAgICAgICAibG1zIjogIlNldHRpbmciLAogICAgICAgICJzdG9yYWdlIjogIlNldHRpbmciLAogICAgICAgICJ0aW1lIjogIlNldHRpbmciLAogICAgICAgICJhY2NvdW50IjogIkFjY291bnQrUm9sZSIsCiAgICAgICAgInJlYm9vdCI6ICJBbGxvdyIsCiAgICAgICAgInNtYXJ0UmV0YWlsU2VydmljZSIgOiAiU2V0dGluZyIsCiAgICAgICAgInVwZ3JhZGUiOiAiQWxsb3ciLCAKICAgICAgICAiYmV0YSI6ICJBbGxvdyIgIAogICAgICB9CiAgICB9LAogICAgInZtcyI6IHsKICAgICAgCiAgICB9CiAgfQ==";
#endif
  try 
  {
    std::ifstream ifs("config.json");
    std::string text((std::istreambuf_iterator<char>(ifs) ),
                       (std::istreambuf_iterator<char>()) );
    Json::Value root;
    Json::Reader reader;
    if(reader.parse(text, root))
    {
      if(root.isMember("permission"))
      {
        permission = root["permission"].asString();
      }      
    }
  }
  catch(std::exception& e)
  {
    //file not exist or parse error
    std::cout << e.what() << std::endl;
  }
  DISABLE_PERMISSIONS = json::object_t {
    {"_", permission}
  };
  DISABLE_ACCESSRIGHT = json::object_t {
    {"accessRightName", ""},
    {"permissions", DISABLE_PERMISSIONS},
    {"description", ""}
  };
  DEFAULT_PERMISSIONS = json::object_t {
    {"_", permission}
  };
  DEFAULT_ACCESSRIGHT = json::object_t {
    {"accessRightName", ""},
    {"permissions", DEFAULT_PERMISSIONS},
    {"description", ""}
  };
}

Config& Config::getInstance()
{
  static Config m;
  return m;
}

